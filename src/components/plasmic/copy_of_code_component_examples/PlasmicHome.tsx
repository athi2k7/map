// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vchhDpLmBjnFZg2EZxeLCc
// Component: YzurjmlDwh1U
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionHeading from "../../SectionHeading"; // plasmic-import: w4tBt8JMNtTz/component
import Columns from "../../Columns"; // plasmic-import: Dhl7VIo-gaZ2/component
import ListItem from "../../ListItem"; // plasmic-import: 4XzjSdicHEy/component
import CompLak26M0UL2W from ""; // plasmic-import: Lak26m0uL2w/codeComponent
import { CompWvOfmajzEzT } from ""; // plasmic-import: WVOfmajzEzT/codeComponent
import { Compul3PqmcsiDp } from ""; // plasmic-import: ul3Pqmcsi-DP/codeComponent
import { CompxjBdry0DCLft } from ""; // plasmic-import: xjBdry0dCLft/codeComponent
import { CompJeDuhbNzDqrg } from ""; // plasmic-import: JEDuhbNzDqrg/codeComponent
import { CompUzrey4T9Ls9 } from ""; // plasmic-import: UZREY4T9Ls9/codeComponent
import { CompwTekhtnW8S } from ""; // plasmic-import: wTEKHTN_W8S/codeComponent
import CompsY6VfJHeCnk from ""; // plasmic-import: sY6VfJHeCnk/codeComponent
import { CompMeDtWiMyeNy } from ""; // plasmic-import: MeDTWiMYENy/codeComponent
import { CompC21F7ReV9U } from ""; // plasmic-import: C2-1f7ReV9U/codeComponent
import Comph6Ob7NOmGlc from ""; // plasmic-import: h6ob7nOmGlc/codeComponent
import { CompAqMWe6FAi5B } from ""; // plasmic-import: AQ-mWE6fAi5b/codeComponent
import { CompzocKoXnOtQ6S } from ""; // plasmic-import: zocKoXNOtQ6s/codeComponent
import { CompwsNDtmbOdaZh } from ""; // plasmic-import: wsNDtmbOdaZH/codeComponent
import { ProductCollection } from "../../../../ProductComponents"; // plasmic-import: RLsZ_o_TV8uy/codeComponent
import { CompFy7MMCzWIL } from ""; // plasmic-import: FY_7mMCzW-iL/codeComponent
import { CompwH5Fb4P5T4RG } from ""; // plasmic-import: wH5Fb4p5T4rG/codeComponent
import { CompMl8F9KGofClk } from ""; // plasmic-import: ML8f9kGofCLK/codeComponent
import { CompAeLJ0Okqkyd } from ""; // plasmic-import: AE_lJ0OKQKYD/codeComponent
import { Comp82Q1WiMOtVKj } from ""; // plasmic-import: 82Q1WiMOtVKj/codeComponent
import { CompvSvIpFojEsTz } from ""; // plasmic-import: vSVIpFojEsTZ/codeComponent
import { CompB38TDoZ5Q8F } from ""; // plasmic-import: _B38TDoZ5q8F/codeComponent
import { CompceqQ0Sp097U0 } from ""; // plasmic-import: ceqQ0sp097U0/codeComponent
import { CompEohc2O5HWmoE } from ""; // plasmic-import: Eohc2o5hWmoE/codeComponent
import ColoredSection from "../../ColoredSection"; // plasmic-import: BHyZr1DH6H_X/component
import LinkButton from "../../LinkButton"; // plasmic-import: B2K6Vt3Mw7jv/component

import { useScreenVariants as useScreenVariantswejjNow4LwJh } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: WejjNow4LWJh/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_code_component_examples.module.css"; // plasmic-import: vchhDpLmBjnFZg2EZxeLCc/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: YzurjmlDwh1U/css

import PlasmicLogoIcon from "./icons/PlasmicIcon__PlasmicLogo"; // plasmic-import: mIEnL0qWzI5t/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: f1t-Y-K6HwTk/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: 3J7PKEfKERfA/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: CyXVHZEovhwn/icon
import Icon8Icon from "../plasmic_kit_website_components/icons/PlasmicIcon__Icon8"; // plasmic-import: f4GO4W3yZm/icon
import imageQq61Pxf2ZXp8 from "./images/image.png"; // plasmic-import: Qq61Pxf2zXP8/picture
import image15J1I4TzCrMR from "./images/image15.png"; // plasmic-import: _j1I4tzCR-mR/picture
import image6OKVkg1YmkhK from "./images/image6.png"; // plasmic-import: o_KVkg1ymkhK/picture
import image5MjG5Fr5K53Nk from "./images/image5.png"; // plasmic-import: mjG5Fr5K53NK/picture
import image7Qp7Ya6B6S6TE from "./images/image7.png"; // plasmic-import: Qp7ya6B6s6tE/picture
import image8JKrJi2ERoDn7 from "./images/image8.png"; // plasmic-import: jKrJI2eRoDn7/picture
import image14Q6L3IVtRDnT7 from "./images/image14.svg"; // plasmic-import: q6L3IVtRDnT7/picture

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  sectionHeading?: p.Flex<typeof SectionHeading>;
  columns?: p.Flex<typeof Columns>;
  arwesCard?: p.Flex<typeof CompAqMWe6FAi5B>;
  h1?: p.Flex<"h1">;
  arwesFigure?: p.Flex<typeof CompwsNDtmbOdaZh>;
  cmsGallery?: p.Flex<typeof CompAeLJ0Okqkyd>;
  reveal?: p.Flex<typeof CompvSvIpFojEsTz>;
  tilt?: p.Flex<typeof CompB38TDoZ5Q8F>;
  embed?: p.Flex<typeof CompEohc2O5HWmoE>;
  coloredSection?: p.Flex<typeof ColoredSection>;
  linkButton?: p.Flex<typeof LinkButton>;
};

export interface DefaultHomeProps {
  className?: string;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  dataFetches?: PlasmicHome__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswejjNow4LwJh()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__kCwR)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qnFoZ)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ptsV)}
              >
                <a
                  className={classNames(projectcss.a, sty.link__glwCp)}
                  href={"https://www.plasmic.app" as const}
                >
                  <img
                    alt={""}
                    className={classNames(projectcss.img, sty.img__ozcDh)}
                    src={imageQq61Pxf2ZXp8}
                  />
                </a>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__iBq6)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bMbWq
                  )}
                >
                  {"Page builder, meet code components."}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oQ5EK)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wtonv
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Introducing "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Plasmic 2.0"}
                      </span>
                      <React.Fragment>
                        {
                          ": the web design tool that integrates seamlessly with your codebase and lets you drag-and-drop your real production React components."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xqW95
                    )}
                  >
                    {
                      "Empower your team with your design system, interactive components, production data, and much more."
                    }
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mZEcT)}
              >
                <img
                  alt={""}
                  className={classNames(projectcss.img, sty.img__kxEmA)}
                  src={image15J1I4TzCrMR}
                />

                <a
                  className={classNames(
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__fymAm
                  )}
                  href={"https://plasmic.app/proj/code-components" as const}
                  target={"_blank" as const}
                >
                  {"Edit this page in Plasmic!"}
                </a>
              </p.Stack>
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__hCkYs)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__sKf4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fqtW8)}
              >
                <SectionHeading
                  data-plasmic-name={"sectionHeading"}
                  data-plasmic-override={overrides.sectionHeading}
                  className={classNames("__wab_instance", sty.sectionHeading)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___21R1K
                  )}
                >
                  {
                    "Tap into the full universe of open-source npm libraries. Or expose components from your own codebase."
                  }
                </div>
              </p.Stack>

              <Columns
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                className={classNames("__wab_instance", sty.columns)}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lSko4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oDmlO)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fIvKe)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__hFkBl)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ejR90
                      )}
                    >
                      {"Bring any design system."}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4NPP
                      )}
                    >
                      {
                        "Use your own design system, or use off-the-shelf libraries complete with all the theming and customizations you've applied in your codebase. Seamlessly interweave Plasmic-designed content and code components."
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eoeBj
                      )}
                    >
                      {"Roboto"}
                    </div>
                  </p.Stack>
                </p.Stack>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__epwY1
                      )}
                    >
                      {"@material-ui/core"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__qLqiL)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__plQht
                      )}
                    >
                      {"Material UI"}
                    </div>
                  }
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yEnSc)}
                  >
                    <Compul3PqmcsiDp
                      className={classNames(
                        "__wab_instance",
                        sty.muiSelect__baAlx
                      )}
                      label={"Delivery method" as const}
                      options={[
                        { value: "standard", label: "Standard Shipping" },
                        { value: "expedited", label: "Expedited Shipping" },
                        { value: "sameday", label: "Same-Day Delivery" },
                        { value: "pickup", label: "Scheduled Pickup" }
                      ]}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__tf7Pf)}
                    >
                      <CompxjBdry0DCLft
                        className={classNames(
                          "__wab_instance",
                          sty.muiButtonGroup__vdxTt
                        )}
                      >
                        <CompJeDuhbNzDqrg
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__cZfl7
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6CuxY
                            )}
                          >
                            {"md"}
                          </div>
                        </CompJeDuhbNzDqrg>

                        <CompJeDuhbNzDqrg
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__bwJPk
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vmjN
                            )}
                          >
                            {"lg"}
                          </div>
                        </CompJeDuhbNzDqrg>

                        <CompJeDuhbNzDqrg
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__yi6DA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ljirZ
                            )}
                          >
                            {"xl"}
                          </div>
                        </CompJeDuhbNzDqrg>

                        <CompJeDuhbNzDqrg
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__mFdzN
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___13Dpv
                            )}
                          >
                            {"xxl"}
                          </div>
                        </CompJeDuhbNzDqrg>
                      </CompxjBdry0DCLft>
                    </p.Stack>
                  </p.Stack>
                </ListItem>

                {false ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kCt9)}
                  >
                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ce3Zl
                          )}
                        >
                          {"@material-ui/core"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__slBgh
                      )}
                      title={"Material UI Select"}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xqQe8
                        )}
                      >
                        <Compul3PqmcsiDp
                          className={classNames(
                            "__wab_instance",
                            sty.muiSelect__hN6Pl
                          )}
                          label={"Delivery method" as const}
                          options={[
                            { value: "standard", label: "Standard Shipping" },
                            { value: "expedited", label: "Expedited Shipping" },
                            { value: "sameday", label: "Same-Day Delivery" },
                            { value: "pickup", label: "Scheduled Pickup" }
                          ]}
                        />
                      </p.Stack>
                    </ListItem>

                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lZcXk
                          )}
                        >
                          {"@material-ui/core"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__rVhHz
                      )}
                      title={"Material UI Button Group"}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5QeZ8
                        )}
                      >
                        <CompxjBdry0DCLft
                          className={classNames(
                            "__wab_instance",
                            sty.muiButtonGroup__qShAp
                          )}
                        >
                          <CompJeDuhbNzDqrg
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__f2YLt
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__smKu7
                              )}
                            >
                              {"md"}
                            </div>
                          </CompJeDuhbNzDqrg>

                          <CompJeDuhbNzDqrg
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__yh2Ec
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mymOy
                              )}
                            >
                              {"lg"}
                            </div>
                          </CompJeDuhbNzDqrg>

                          <CompJeDuhbNzDqrg
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__bZrWl
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__k4VuW
                              )}
                            >
                              {"xl"}
                            </div>
                          </CompJeDuhbNzDqrg>

                          <CompJeDuhbNzDqrg
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__qc67G
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wRFx
                              )}
                            >
                              {"xxl"}
                            </div>
                          </CompJeDuhbNzDqrg>
                        </CompxjBdry0DCLft>
                      </p.Stack>
                    </ListItem>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jl1Gh)}
                  >
                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3YTir
                          )}
                        >
                          {"antd"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem___1F8Ga
                      )}
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yRQdY
                          )}
                        >
                          {"Ant Design"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7CnQ
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oS4Hc
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__xbnWk
                            )}
                          >
                            <CompUzrey4T9Ls9
                              className={classNames(
                                "__wab_instance",
                                sty.slider__k9Kqc
                              )}
                              range={true}
                            />

                            <CompwTekhtnW8S
                              className={classNames(
                                "__wab_instance",
                                sty.menu__sqYcg
                              )}
                              defaultSelectedKeys={["opt3"]}
                            >
                              <CompsY6VfJHeCnk
                                className={classNames(
                                  "__wab_instance",
                                  sty.menuItem__r5DXt
                                )}
                                key={"opt1" as const}
                              >
                                {"Home"}
                              </CompsY6VfJHeCnk>

                              <CompsY6VfJHeCnk
                                className={classNames(
                                  "__wab_instance",
                                  sty.menuItem___2N20L
                                )}
                                key={"opt2" as const}
                              >
                                {"Features"}
                              </CompsY6VfJHeCnk>

                              <CompsY6VfJHeCnk
                                className={classNames(
                                  "__wab_instance",
                                  sty.menuItem__rjGjD
                                )}
                                key={"opt3" as const}
                              >
                                {"Case studies"}
                              </CompsY6VfJHeCnk>
                            </CompwTekhtnW8S>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7Ola5
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__dro40
                              )}
                            >
                              <CompMeDtWiMyeNy
                                className={classNames(
                                  "__wab_instance",
                                  sty.alert__f7EMl
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__mn6G4
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__wrl7L
                                      )}
                                    >
                                      {"Thank you for your order! "}
                                    </div>

                                    <PlasmicLogoIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ggVwx
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                }
                                message={"Purchase complete" as const}
                                showIcon={true}
                                type={"success" as const}
                              />

                              <CompMeDtWiMyeNy
                                className={classNames(
                                  "__wab_instance",
                                  sty.alert__tzIPt
                                )}
                                description={"Please fill all required fields."}
                                message={"Error submitting form" as const}
                                showIcon={true}
                                type={"error" as const}
                              />
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__n2Aj8
                              )}
                            >
                              <CompC21F7ReV9U
                                className={classNames(
                                  "__wab_instance",
                                  sty.collapse__raS1K
                                )}
                                defaultActiveKey={["1"]}
                              >
                                <Comph6Ob7NOmGlc
                                  className={classNames(
                                    "__wab_instance",
                                    sty.collapsePanel___8Def
                                  )}
                                  header={"Shipping" as const}
                                  key={"1" as const}
                                >
                                  <p.Stack
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__gurE
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___7PklL
                                      )}
                                    >
                                      {"Standard shipping"}
                                    </div>

                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__yLnuG
                                      )}
                                    >
                                      {"2 South Park\nSan Francisco, CA 94107"}
                                    </div>

                                    <a
                                      className={classNames(
                                        projectcss.a,
                                        projectcss.__wab_text,
                                        sty.link__kdAr
                                      )}
                                      href={"#" as const}
                                    >
                                      {"Change"}
                                    </a>
                                  </p.Stack>
                                </Comph6Ob7NOmGlc>

                                <Comph6Ob7NOmGlc
                                  className={classNames(
                                    "__wab_instance",
                                    sty.collapsePanel___1Bo0W
                                  )}
                                  header={"Payment method" as const}
                                  key={"2" as const}
                                >
                                  <p.Stack
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__ly7Qo
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___73Q6S
                                      )}
                                    >
                                      {"Using gift card balance."}
                                    </div>

                                    <a
                                      className={classNames(
                                        projectcss.a,
                                        projectcss.__wab_text,
                                        sty.link__vkbud
                                      )}
                                      href={"#" as const}
                                    >
                                      {"Change"}
                                    </a>
                                  </p.Stack>
                                </Comph6Ob7NOmGlc>
                              </CompC21F7ReV9U>
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </ListItem>
                  </p.Stack>
                ) : null}
                {false ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fOymH)}
                  >
                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7YUyU
                          )}
                        >
                          {"antd"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__od76
                      )}
                      title={"Ant Slider"}
                    >
                      <CompUzrey4T9Ls9
                        className={classNames(
                          "__wab_instance",
                          sty.slider__fjUpC
                        )}
                        range={true}
                      />
                    </ListItem>

                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qkZfP
                          )}
                        >
                          {"antd"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__th3NW
                      )}
                      title={"Ant Menu"}
                    >
                      <CompwTekhtnW8S
                        className={classNames(
                          "__wab_instance",
                          sty.menu__iOOjJ
                        )}
                      >
                        <CompsY6VfJHeCnk
                          className={classNames(
                            "__wab_instance",
                            sty.menuItem__ewvnG
                          )}
                          key={"opt1" as const}
                        >
                          {"Home"}
                        </CompsY6VfJHeCnk>

                        <CompsY6VfJHeCnk
                          className={classNames(
                            "__wab_instance",
                            sty.menuItem__jYbCn
                          )}
                          key={"opt2" as const}
                        >
                          {"Features"}
                        </CompsY6VfJHeCnk>

                        <CompsY6VfJHeCnk
                          className={classNames(
                            "__wab_instance",
                            sty.menuItem__jV0YA
                          )}
                          key={"opt3" as const}
                        >
                          {"Case studies"}
                        </CompsY6VfJHeCnk>
                      </CompwTekhtnW8S>
                    </ListItem>
                  </p.Stack>
                ) : null}
                {false ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__afMjB)}
                  >
                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qjEqr
                          )}
                        >
                          {"antd"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__dmUc
                      )}
                      title={"Ant Alert"}
                    >
                      <CompMeDtWiMyeNy
                        className={classNames(
                          "__wab_instance",
                          sty.alert__uEhFx
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lOZ
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__r1Sxw
                              )}
                            >
                              {"Thank you for your order! "}
                            </div>

                            <PlasmicLogoIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__eAtPy
                              )}
                              role={"img"}
                            />
                          </div>
                        }
                        message={"Purchase complete" as const}
                        showIcon={true}
                      />

                      <CompMeDtWiMyeNy
                        className={classNames(
                          "__wab_instance",
                          sty.alert___9CzI
                        )}
                        description={"Please fill all required fields."}
                        message={"Error submitting form" as const}
                        showIcon={true}
                      />
                    </ListItem>

                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7FFHj
                          )}
                        >
                          {"antd"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem___6PCzY
                      )}
                      title={"Ant Collapse"}
                    >
                      <CompC21F7ReV9U
                        className={classNames(
                          "__wab_instance",
                          sty.collapse___4C4Ga
                        )}
                      >
                        <Comph6Ob7NOmGlc
                          className={classNames(
                            "__wab_instance",
                            sty.collapsePanel__usm3R
                          )}
                          header={"Shipping" as const}
                          key={"1" as const}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__noIf
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ktfza
                              )}
                            >
                              {"Standard shipping"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fTh0T
                              )}
                            >
                              {"2 South Park\nSan Francisco, CA 94107"}
                            </div>

                            <a
                              className={classNames(
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__hOpnp
                              )}
                              href={"#" as const}
                            >
                              {"Change"}
                            </a>
                          </p.Stack>
                        </Comph6Ob7NOmGlc>

                        <Comph6Ob7NOmGlc
                          className={classNames(
                            "__wab_instance",
                            sty.collapsePanel__lTPw
                          )}
                          header={"Payment method" as const}
                          key={"2" as const}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vjiKl
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__c9NVj
                              )}
                            >
                              {"Using gift card balance."}
                            </div>

                            <a
                              className={classNames(
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___7U51D
                              )}
                              href={"#" as const}
                            >
                              {"Change"}
                            </a>
                          </p.Stack>
                        </Comph6Ob7NOmGlc>
                      </CompC21F7ReV9U>
                    </ListItem>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__fcMyW)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jHHhU)}
                >
                  <ListItem
                    _package={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vq6Sr
                        )}
                      >
                        {"@arwes/core"}
                      </div>
                    }
                    className={classNames("__wab_instance", sty.listItem__fVl9)}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___98Aup
                        )}
                      >
                        {"Arwes Card"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0RjXi
                      )}
                    >
                      <CompAqMWe6FAi5B
                        data-plasmic-name={"arwesCard"}
                        data-plasmic-override={overrides.arwesCard}
                        caption={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hsPw1
                            )}
                          >
                            {"Photo of the Orion nebula taken by Hubble."}
                          </div>
                        }
                        className={classNames("__wab_instance", sty.arwesCard)}
                        title={
                          true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nQqB7
                              )}
                            >
                              {"Nebula"}
                            </div>
                          ) : null
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yMeEi
                          )}
                        >
                          <CompzocKoXnOtQ6S
                            as={"h1" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.arwesText___40YKv
                            )}
                          >
                            {true ? (
                              <h1
                                data-plasmic-name={"h1"}
                                data-plasmic-override={overrides.h1}
                                className={classNames(
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1
                                )}
                              >
                                {"NEBULA"}
                              </h1>
                            ) : null}
                          </CompzocKoXnOtQ6S>

                          <CompzocKoXnOtQ6S
                            as={"p" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.arwesText__rvH1C
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jdHAk
                              )}
                            >
                              {
                                "A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. Originally, the term was used to describe any diffused astronomical object, including galaxies beyond the Milky Way."
                              }
                            </div>
                          </CompzocKoXnOtQ6S>

                          <CompwsNDtmbOdaZh
                            data-plasmic-name={"arwesFigure"}
                            data-plasmic-override={overrides.arwesFigure}
                            alt={"Orion" as const}
                            className={classNames(
                              "__wab_instance",
                              sty.arwesFigure
                            )}
                            src={
                              "https://playground.arwes.dev/assets/images/wallpaper.jpg" as const
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bPcXz
                              )}
                            >
                              {"Photo of the Orion nebula taken by Hubble."}
                            </div>
                          </CompwsNDtmbOdaZh>
                        </div>
                      </CompAqMWe6FAi5B>
                    </div>
                  </ListItem>
                </p.Stack>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ftYvz)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rJc4P)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ve4UX
                  )}
                >
                  {"Access your real production data."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vxhtU
                  )}
                >
                  {
                    "Bring components of any complexity—components that fetch data, use application/session state, and more."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kwTa3)}
              >
                <ListItem
                  _package={null}
                  className={classNames("__wab_instance", sty.listItem__rxlgb)}
                  title={
                    "Data from Shopify product catalog (via Storefront GraphQL API)"
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d4Dql
                    )}
                  >
                    {"SUMMER COLLECTION"}
                  </div>

                  <ProductCollection
                    className={classNames(
                      "__wab_instance",
                      sty.productCollection__jxEvq
                    )}
                    collectionHandle={"summer-collection" as const}
                    columnGap={16 as const}
                    columns={4 as const}
                    rowGap={16 as const}
                    scroller={true}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uWpKr)}
                    >
                      <CompFy7MMCzWIL
                        className={classNames(
                          "__wab_instance",
                          sty.productImage___0Z2Y
                        )}
                      />

                      <CompwH5Fb4P5T4RG
                        className={classNames(
                          "__wab_instance",
                          sty.productPrice__drVG
                        )}
                      />

                      <CompMl8F9KGofClk
                        className={classNames(
                          "__wab_instance",
                          sty.productTitle__iv6Ve
                        )}
                      />
                    </p.Stack>
                  </ProductCollection>
                </ListItem>
              </p.Stack>

              <ListItem
                _package={null}
                className={classNames("__wab_instance", sty.listItem___6Ceg)}
                title={"Data from Contentful CMS (via REST API)"}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___8WfoK)}
                >
                  <CompAeLJ0Okqkyd
                    data-plasmic-name={"cmsGallery"}
                    data-plasmic-override={overrides.cmsGallery}
                    className={classNames("__wab_instance", sty.cmsGallery)}
                    columnGap={16 as const}
                    columns={4 as const}
                    rowGap={16 as const}
                    scroller={true}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__iElc)}
                    >
                      <Comp82Q1WiMOtVKj
                        className={classNames(
                          "__wab_instance",
                          sty.cmsItemField___8IHy8
                        )}
                        field={"photo" as const}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ftCEm
                        )}
                      >
                        <Comp82Q1WiMOtVKj
                          className={classNames(
                            "__wab_instance",
                            sty.cmsItemField__suvIu
                          )}
                          field={"title" as const}
                        />
                      </div>
                    </div>
                  </CompAeLJ0Okqkyd>
                </div>
              </ListItem>

              <ListItem
                _package={null}
                className={classNames("__wab_instance", sty.listItem__gcpz9)}
                title={"Data from Shopify product catalog (as a CSS grid)"}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___45LOg)}
                >
                  <ProductCollection
                    className={classNames(
                      "__wab_instance",
                      sty.productCollection___4ELlm
                    )}
                    columnGap={16 as const}
                    columns={4 as const}
                    rowGap={16 as const}
                  >
                    <CompMl8F9KGofClk
                      className={classNames(
                        "__wab_instance",
                        sty.productTitle___8Rax6
                      )}
                    />

                    <CompwH5Fb4P5T4RG
                      className={classNames(
                        "__wab_instance",
                        sty.productPrice__va4Lq
                      )}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pQ8GE
                      )}
                    >
                      {"Hello"}
                    </div>

                    <CompFy7MMCzWIL
                      className={classNames(
                        "__wab_instance",
                        sty.productImage__rzjSu
                      )}
                    />
                  </ProductCollection>
                </div>

                <ProductCollection
                  className={classNames(
                    "__wab_instance",
                    sty.productCollection___5Rgqm
                  )}
                  collectionHandle={"casual-things" as const}
                  columnGap={16 as const}
                  columns={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? (2 as const)
                      : (4 as const)
                  }
                  count={8 as const}
                  rowGap={16 as const}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__bB8U8)}
                  >
                    <CompFy7MMCzWIL
                      className={classNames(
                        "__wab_instance",
                        sty.productImage__kTh5X
                      )}
                    />

                    <CompwH5Fb4P5T4RG
                      className={classNames(
                        "__wab_instance",
                        sty.productPrice__rzWaS
                      )}
                    />

                    <CompMl8F9KGofClk
                      className={classNames(
                        "__wab_instance",
                        sty.productTitle__kj9X3
                      )}
                    />
                  </p.Stack>
                </ProductCollection>
              </ListItem>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__yo6SJ)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nXhsl)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__l5YkB)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___423Bk
                    )}
                  >
                    {"Extend Plasmic with any interaction."}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gsPi
                    )}
                  >
                    {
                      "You can introduce some very general-purpose building blocks that extend Plasmic's feature set."
                    }
                  </div>
                </p.Stack>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yuYf0
                      )}
                    >
                      {"react-awesome-reveal"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__uYsO)}
                  title={"Reveal on scroll"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jttM9)}
                  >
                    <CompvSvIpFojEsTz
                      data-plasmic-name={"reveal"}
                      data-plasmic-override={overrides.reveal}
                      cascade={true}
                      className={classNames("__wab_instance", sty.reveal)}
                      direction={"up" as const}
                      effect={"fade" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nlam
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__chzAo
                          )}
                        >
                          {"JAY-Z"}
                        </div>
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xbYh9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rDx69
                          )}
                        >
                          {"FOLLOW ARTIST"}
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cXhIb
                          )}
                        >
                          <a
                            className={classNames(
                              projectcss.a,
                              sty.link__jchU0
                            )}
                            href={"https://www.facebook.com/JayZ" as const}
                            target={"_blank" as const}
                          >
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__avOum
                              )}
                              role={"img"}
                            />
                          </a>

                          <a
                            className={classNames(
                              projectcss.a,
                              sty.link__uycp9
                            )}
                            href={"https://twitter.com/sc?lang=en" as const}
                            target={"_blank" as const}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ajHEa
                              )}
                              role={"img"}
                            />
                          </a>

                          <a
                            className={classNames(
                              projectcss.a,
                              sty.link___5MH6K
                            )}
                            href={"https://lifeandtimes.com/" as const}
                            target={"_blank" as const}
                          >
                            <Icon3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wKj2
                              )}
                              role={"img"}
                            />
                          </a>
                        </p.Stack>
                      </p.Stack>
                    </CompvSvIpFojEsTz>
                  </div>
                </ListItem>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__owaql
                      )}
                    >
                      {"react-parallax-tilt"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__a0O4E)}
                  title={"3D parallax tilt effect"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mmikU)}
                  >
                    <CompB38TDoZ5Q8F
                      data-plasmic-name={"tilt"}
                      data-plasmic-override={overrides.tilt}
                      className={classNames("__wab_instance", sty.tilt)}
                      reset={false}
                      tiltReverse={true}
                      trackOnWindow={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kMkrc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__p3Gub,
                            hasVariant(globalVariants, "screen", "mobile")
                              ? ("inner-element" as const)
                              : ("inner-element" as const)
                          )}
                        />
                      </div>
                    </CompB38TDoZ5Q8F>
                  </div>
                </ListItem>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bPhKs
                      )}
                    >
                      {"react-scroll-parallax"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__fNg00)}
                  title={"Parallax scroll effect"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pan1X)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xdNxl)}
                    >
                      <CompceqQ0Sp097U0
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__uXh
                        )}
                        y={[-20, 20]}
                      >
                        <img
                          alt={"" as const}
                          className={classNames(projectcss.img, sty.img__t683I)}
                          loading={"lazy" as const}
                          src={image6OKVkg1YmkhK}
                        />
                      </CompceqQ0Sp097U0>

                      <CompceqQ0Sp097U0
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__ecUyv
                        )}
                        y={[40, -40]}
                      >
                        <img
                          alt={""}
                          className={classNames(projectcss.img, sty.img__z6Ut)}
                          loading={"lazy" as const}
                          src={image5MjG5Fr5K53Nk}
                        />
                      </CompceqQ0Sp097U0>

                      <CompceqQ0Sp097U0
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__q8IGi
                        )}
                        y={[-20, 20]}
                      >
                        <img
                          alt={""}
                          className={classNames(projectcss.img, sty.img__k1Ba4)}
                          loading={"lazy" as const}
                          src={image7Qp7Ya6B6S6TE}
                        />
                      </CompceqQ0Sp097U0>

                      <CompceqQ0Sp097U0
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__lx9Rf
                        )}
                        y={[99, -99]}
                      >
                        <img
                          alt={""}
                          className={classNames(projectcss.img, sty.img__d9U0W)}
                          loading={"lazy" as const}
                          src={image8JKrJi2ERoDn7}
                        />
                      </CompceqQ0Sp097U0>
                    </div>
                  </div>
                </ListItem>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__q4A2S)}
                >
                  <ListItem
                    _package={null}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___34G6I
                    )}
                    title={'A generic "Embed Code" component'}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fCbty)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ltdif
                        )}
                      >
                        <CompEohc2O5HWmoE
                          data-plasmic-name={"embed"}
                          data-plasmic-override={overrides.embed}
                          className={classNames("__wab_instance", sty.embed)}
                          code={
                            '<a class="twitter-timeline" href="https://twitter.com/plasmicapp?ref_src=twsrc%5Etfw">Tweets by plasmicapp</a> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>' as const
                          }
                        />
                      </div>
                    </p.Stack>
                  </ListItem>
                </p.Stack>
              </p.Stack>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kHh55)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3F1UX
                )}
              >
                {"How does this work?"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fmTg4
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "Plasmic is a page builder and design tool that has a kernel which "
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic" }}
                  >
                    {"runs from within your application"}
                  </span>
                  <React.Fragment>
                    {
                      '. We call the Plasmic project "hosted" by your application.'
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cZg7K
                )}
              >
                {
                  "This tight integration is what lets you easily and seamlessly expose code components of arbitrary complexity. They can connect to your application state, fetch data, implement complex behavior, and much more. All without bundling shenanigans."
                }
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aGvS0
                )}
              >
                {
                  "You can set the app host to be your localhost dev server (complete with hot reload working!) OR your actual production site."
                }
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xmmcc
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"What does it take to enable this for your codebase? "}
                  </span>
                  <React.Fragment>
                    {
                      "Simply add a snippet of code, and now you can configure any Plasmic project to use your application URL as the host. Then expose any component by calling registerComponent() on it. That's it!"
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>

              <a
                className={classNames(
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__kVbWk
                )}
                href={
                  "https://docs.plasmic.app/learn/code-components/" as const
                }
                target={"_blank" as const}
              >
                {"See developer docs ->"}
              </a>

              <a
                className={classNames(
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link___6ORd
                )}
                href={"https://github.com/plasmicapp/code-components" as const}
                target={"_blank" as const}
              >
                {"See this project's host repo on GitHub ->"}
              </a>
            </p.Stack>

            <ColoredSection
              data-plasmic-name={"coloredSection"}
              data-plasmic-override={overrides.coloredSection}
              className={classNames("__wab_instance", sty.coloredSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vQygj)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___98Veb
                  )}
                >
                  {
                    "Plasmic lets anyone build and deploy visual content—from full pages to sections of pages—within any tech stack."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y01M
                  )}
                >
                  {
                    "Plasmic powers some of the largest websites in the world. Companies from boutique brands to Fortune 500s use Plasmic to eliminate swaths of development work and let marketing and design teams iterate incredibly fast."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5W61A
                  )}
                >
                  {
                    "And now with code components, developers can equip their whole team with the exact right set of building blocks to move even faster."
                  }
                </div>

                <LinkButton
                  data-plasmic-name={"linkButton"}
                  data-plasmic-override={overrides.linkButton}
                  className={classNames("__wab_instance", sty.linkButton)}
                  href={"https://studio.plasmic.app/signup" as const}
                  icon={
                    <Icon8Icon
                      className={classNames(projectcss.all, sty.svg__oLqDi)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a1Bf
                      )}
                    >
                      {"Try Plasmic for free"}
                    </div>
                  }
                  type={["white", "rightIcon"]}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox__ieOyE)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yXuQo
                  )}
                >
                  {
                    "Code components are just the beginning of what application hosting unlocks."
                  }
                </div>

                <p.Stack
                  as={"a"}
                  hasGap={true}
                  className={classNames(projectcss.a, sty.link__xrgw7)}
                  href={"https://twitter.com/plasmicapp" as const}
                  target={"_blank" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zteAe
                    )}
                  >
                    {"Follow @plasmicapp on Twitter to see what's next."}
                  </div>
                </p.Stack>

                <a
                  className={classNames(projectcss.a, sty.link___4Zgc)}
                  href={"https://www.plasmic.app" as const}
                >
                  <img
                    alt={""}
                    className={classNames(projectcss.img, sty.img__aqotK)}
                    loading={"lazy" as const}
                    src={image14Q6L3IVtRDnT7}
                  />
                </a>
              </p.Stack>
            </ColoredSection>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHeading",
    "columns",
    "arwesCard",
    "h1",
    "arwesFigure",
    "cmsGallery",
    "reveal",
    "tilt",
    "embed",
    "coloredSection",
    "linkButton"
  ],
  sectionHeading: ["sectionHeading"],
  columns: ["columns"],
  arwesCard: ["arwesCard", "h1", "arwesFigure"],
  h1: ["h1"],
  arwesFigure: ["arwesFigure"],
  cmsGallery: ["cmsGallery"],
  reveal: ["reveal"],
  tilt: ["tilt"],
  embed: ["embed"],
  coloredSection: ["coloredSection", "linkButton"],
  linkButton: ["linkButton"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sectionHeading: typeof SectionHeading;
  columns: typeof Columns;
  arwesCard: typeof CompAqMWe6FAi5B;
  h1: "h1";
  arwesFigure: typeof CompwsNDtmbOdaZh;
  cmsGallery: typeof CompAeLJ0Okqkyd;
  reveal: typeof CompvSvIpFojEsTz;
  tilt: typeof CompB38TDoZ5Q8F;
  embed: typeof CompEohc2O5HWmoE;
  coloredSection: typeof ColoredSection;
  linkButton: typeof LinkButton;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHome__Fetches;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHeading: makeNodeComponent("sectionHeading"),
    columns: makeNodeComponent("columns"),
    arwesCard: makeNodeComponent("arwesCard"),
    h1: makeNodeComponent("h1"),
    arwesFigure: makeNodeComponent("arwesFigure"),
    cmsGallery: makeNodeComponent("cmsGallery"),
    reveal: makeNodeComponent("reveal"),
    tilt: makeNodeComponent("tilt"),
    embed: makeNodeComponent("embed"),
    coloredSection: makeNodeComponent("coloredSection"),
    linkButton: makeNodeComponent("linkButton"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
